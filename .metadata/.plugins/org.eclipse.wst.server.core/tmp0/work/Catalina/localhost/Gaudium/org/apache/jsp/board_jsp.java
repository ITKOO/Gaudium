/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-05-10 02:53:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import java.util.Date;
import java.io.FileReader;
import java.io.BufferedReader;

public final class board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.io.FileReader");
    _jspx_imports_classes.add("java.io.BufferedReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("    <title>Gaudium</title>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css?family=Pacifico|Nanum+Gothic|Yeon+Sung\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel = \"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- 상단 Gaudium 메뉴바 -->\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menuBar.jsp", out, false);
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   <div class = \"boardList\" id = \"boardListDiv\">\r\n");
      out.write("       \r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 질문 추가하기 부분 -->\r\n");
      out.write("    <div class = \"question\" id = \"questionDiv\">\r\n");
      out.write("        <!-- 타이틀 바 -->\r\n");
      out.write("        <div class = \"qTitleBar\">\r\n");
      out.write("            <span class = \"qTitle\">질문 작성하기</span>\r\n");
      out.write("            <span class = \"cancel\" onclick = \"cancel()\">X</span>\r\n");
      out.write("            <hr class = \"qHr\">\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 질문 작성 글 Textarea -->\r\n");
      out.write("        <textarea class = \"qTextarea\" id = \"qContents\">\r\n");
      out.write("            \r\n");
      out.write("        </textarea>\r\n");
      out.write("\r\n");
      out.write("        <!-- 작성 완료 버튼 -->\r\n");
      out.write("        <input type = \"button\" value = \"작성 완료\" id = \"viewEventBtn\" class = \"okBtn\" onclick=\"okBtn()\">\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- 이벤트 자세히 보기 버튼 -->\r\n");
      out.write("    <div class = \"boardInsert\">\r\n");
      out.write("        <input type = \"button\" value = \"질문 작성하기\" id = \"viewEventBtn\" class = \"InsertBtn\" onclick=\"insertQuestion()\">\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div style = \"width:100%;height:20%;\"></div>\r\n");
      out.write("    \r\n");
      out.write("     <!-- 하단 Gaudium Footer -->\r\n");
      out.write("   \t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("   \t\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        var questionStyle = document.getElementById('questionDiv');\r\n");
      out.write("\r\n");
      out.write("        function insertQuestion()\r\n");
      out.write("        {\r\n");
      out.write("            console.log(\"dd\");\r\n");
      out.write("           \r\n");
      out.write("            questionStyle.style.display = \"block\";   \r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function cancel()\r\n");
      out.write("        {\r\n");
      out.write("            questionStyle.style.display = \"none\";   \r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
